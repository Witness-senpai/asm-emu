lang -> expr*
expr -> common | arifetic | logical | jump

arifetic -> arif_op | sh
logical -> log_op | comp_op
common -> mov | pop | push

mov -> 'MOV' (addr | reg) (addr | reg | literal)
pop -> 'POP' reg
push -> 'PUSH' (literal | reg)

arif_op -> 'ADD' | 'SUB'
shift_op -> 'SHL' | 'SHR'
log_op -> 'AND' | 'OR' | 'XOR' | 'NOR' | 'NOT'
comp_op -> 'CMP'

jump -> jmp_op addr
jmp_op -> 'JC' | 'JZ' | 'JMP'

reg -> "R[1-7]*"
literal -> "#[0-9A-F]+"
addr -> "[0-9A-F]+"